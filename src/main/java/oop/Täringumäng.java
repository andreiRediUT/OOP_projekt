package oop;

import java.util.Scanner;

public class T√§ringum√§ng {
    private boolean esimese_kord;
    private KuueNumbriT√§ring t√§ring;

    private Skoor skoor;

    public T√§ringum√§ng() {
        this.esimese_kord = true;
        this.skoor = new Skoor(91);
        this.t√§ring = new KuueNumbriT√§ring();
    }

    public void alusta() {


        this.reeglid();   //prindib reeglid

        // m√§ngija skoor kuni ta ise l√µpetab v√µi saab 1

        Scanner scanner = new Scanner(System.in);

        while (true) {   // ts√ºkkel jookseb koguaeg, kuni m√§ngu l√µppemiseni

            // k√ºsin m√§ngijalt, et √§kki annab k√§igu edasi, kui korduvalt veeretanud ja ei ole 1 saanud.

            if (this.skoor.keegiV√µitnud() != -1) break;   // L√µpetab programmi t√∂√∂d kui keegi saanud skoori t√§is

            t√§ring.t√§ringuVeeretus();
            this.skoor.setVooruskoor(t√§ring.getVeeretus());   // ajutine skoor, mida p√§rast lisatakse √ºldskoorile
            System.out.println(esimese_kord ? " ".repeat(40) + "Esimene m√§ngija veeretas " + t√§ring.getVeeretus() : " ".repeat(40) + "Teine M√§ngija veeretas " + t√§ring.getVeeretus());


            if (t√§ring.getVeeretus() == 1) poole_vahetus(true);

            System.out.println("K√§igu √ºleandmiseks, kirjuta  - \"ff\" ");

            System.out.print(esimese_kord ? "\n‚Ö†.m√§ngija vooruskoor - " : "\n‚Ö°.m√§ngija vooruskoor -  ");
            System.out.print(skoor.getVooruskoor());   // kuvab hetkevooru m√§ngija skoori

            System.out.println(" ".repeat(20) + "√úldskoor " + skoor.getSkoor()[0] + " | " + skoor.getSkoor()[1]);

            String input = scanner.nextLine();

            if (input.equals("ff")) {
                this.poole_vahetus(false);
                continue;
            }

        }

        // M√§ngu v√µitja kuulutamine.

        this.skoor.prindiSkoor();

        System.out.println("" +
                "\n ü•áü•áü•áü•áü•á M√§ngu v√µitis "
                + (this.skoor.keegiV√µitnud() == 0 ? "Esimene" : "Teine")
                + " m√§ngija ü•áü•áü•áü•áü•áü•á\n");

        System.out.println("   Palju √µnne!  ");

    }

    /**
     * @param t√§ring Kui on True, siis kutsuti funktsioon t√§ringuviskest "1". √úldskoorile ei liideta vooruskoor
     *               Voorukord l√§heb teisele m√§ngijale √ºle.
     *               Kui on False, siis m√§ngija loobus voorust vabatahtlikult, kirjutades "ff".
     *               Liidetake vooruskoor √ºldskoorile ja kord l√§heb teisele m√§ngija √ºle.
     */
    protected void poole_vahetus(boolean t√§ring) {

        if (!t√§ring) this.skoor.liidaSkoor(esimese_kord);

        this.skoor.setVooruskoor(0);   // kui on null, siis nullib vooruskoori

        this.esimese_kord = !esimese_kord;

        this.skoor.prindiSkoor();
        System.out.println("N√º√ºd on " + (esimese_kord ? " Esimese m√§ngija" : "Teise m√§ngija kord"));

    }

//    public int random_number() {
//       return  (int) ((Math.random() * (6 - 1)) + 1);
//    }


    protected void reeglid() {
        System.out.println("M√§ngijad viskavad t√§ringut korda m√∂√∂da. ");
        System.out.println("√úhes viskevoorus v√µib m√§ngija visata t√§ringuid √ºksk√µik mitu korda");
        System.out.println("aga kui tuleb 1, siis kogusumma nullitakse ja viske√µigus l√§heb teisele m√§ngijale.");
        System.out.println("Viskel saadud tulemus liidetakse kogusummale. V√µidab see, kes saab enne √ºle 91 punkti. ");
        System.out.println("T√§ringu viskamiseks vajuta ENTER");

        System.out.println("\nAlustab esimene m√§ngija.");
    }

}
